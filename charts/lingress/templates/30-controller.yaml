{{- if .Values.controller.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "lingress.fullname" . }}
  namespace: {{ template "lingress.namespace" . }}
  labels:
    {{- include "lingress.labels" . | nindent 4 }}
    {{- with .Values.controller.labels -}}{{- . | toYaml | nindent 4 -}}{{- end }}
  annotations:
    {{- include "lingress.annotations" . | nindent 4 }}
    {{- with .Values.controller.annotations -}}{{- . | toYaml | nindent 4 -}}{{- end }}
spec:
  {{- if ne .Values.controller.kind `DaemonSet` }}
  replicas: {{.Values.controller.replicas}}
  {{- end }}
  {{- with .Values.controller.strategy }}
  strategy:
    {{- . | toYaml | nindent 4 -}}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lingress.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lingress.labels" . | nindent 8 }}
        {{- with .Values.controller.podLabels -}}{{- . | toYaml | nindent 8 -}}{{- end }}
      annotations:
        {{- include "lingress.annotations" . | nindent 8 }}
        {{- with .Values.controller.podAnnotations -}}{{- . | toYaml | nindent 8 -}}{{- end }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ template "lingress.serviceAccountName" . }}
      {{- end }}

      {{- with .Values.controller.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      containers:
        - name: "controller"
          args:
            - "--server.http.listenAddress={{.Values.controller.ports.http}}"
            - "--server.https.listenAddress={{.Values.controller.ports.https}}"
            - "--management.listenAddress={{.Values.controller.ports.management}}"
            {{- range .Values.controller.args }}
            - {{ . | quote }}
            {{- end }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{.Values.controller.ports.http}}
              name: http
            - containerPort: {{.Values.controller.ports.https}}
              name: https
            - containerPort: {{.Values.controller.ports.management}}
              name: management
          livenessProbe:
            httpGet:
              path: /health
              port: {{.Values.controller.ports.management}}
          readinessProbe:
            httpGet:
              path: /health
              port: {{.Values.controller.ports.management}}
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            {{- if or .Values.controller.securityContext.runAsUser .Values.controller.securityContext.runAsGroup }}
            runAsNonRoot: true
            {{- end }}
            {{- with .Values.controller.securityContext.runAsUser }}
            runAsUser: {{ . }}
            {{- end }}
            {{- with .Values.controller.securityContext.runAsGroup }}
            runAsGroup: {{ . }}
            {{- end }}
          {{- with .Values.controller.annotations -}}
          resources:
            {{ . | toYaml | indent 12 }}
          {{- end }}
      {{- with .Values.controller.securityContext.fsGroup }}
      securityContext:
        fsGroup: {{ . | quote }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{ . | toYaml | indent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{ . | toYaml | indent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{ . | toYaml | indent 8 }}
      {{- end }}
{{- end }}